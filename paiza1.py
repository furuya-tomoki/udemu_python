-スペースが全角文字になっている。
-ダブルクォーテーションが全角文字になっている。
-関数名が、全て半角小文字で記述されていない。（×Print、　○print）

Pythonでは、この「print」のような命令を「関数」と呼んでいます。

プログラミングでは、「print」のような関数で、コンピュータに対して動作を指示していきます。「print」と書くと、文字を表示するのだなとPythonが理解して、そのとおり動いてくれるのです。

プログラミング言語は、このような関数をたくさん持っています。各関数がどのように動作をするか、プログラミング言語ごとに決まっています。

paizaラーニングでは、正しく命令を入力すると、入力した内容に応じてコードの色が変わります。
色が変わっていない場合は、正しく入力できていない可能性があります。
プログラムを実行する前に、間違いがないか確認しましょう。

Pythonでは、「」から行末までがコメントになります。

複数の行をコメントアウトするときは、次のようにします。

・各行の先頭に「」を記述する。
・3つの連続したシングルクォートで囲む

文字データの呼び名
プログラミングでは、文字データのことを「テキスト」「文字列」(もじれつ)
または「String」(ストリング/ストリングス)と呼ぶことがあります。

print関数による複数行表示
Pythonのprint関数は、シングルクォーテーション3個で、複数行を扱うことができます。

print('''<h1>helloworld</h1>
<p>世界の皆さん、
<b>こんにちは</b></p>''')

print関数で改行したくない場合
print関数で改行したくない場合、ひとつの方法は、文字列を「,」で区切ります。
この場合、出力された文字列は、スペースで区切られます。

print("<h1>helloworld</h1>","<p>世界の皆さん、","<b>こんにちは</b></p>")

もうひとつの方法は、カッコの中に「,end=""」を追加します。

print("<h1>helloworld</h1>",end="")
print("<p>世界の皆さん、",end="")
print("<b>こんにちは</b></p>",end="")

変数の名前のつけ方
Pythonで変数(ローカル変数)の名前は、次のルールに従って付けます。

・最初の1文字目：英文字または、「_」(アンダーバー)
・2文字目以降　：英文字・数字「_」(アンダーバー)

変数名の例：
○player　1文字目が、英小文字
○_weapon　1文字目が、「_」(アンダーバー)
○player012文字目以降に数字
○redDragon2文字目以降に英大文字

×1player1文字目に数字は使えない
×class重複

なお、「print」のように、Pythonで使われる関数名などは、
あらかじめ予約されている言葉なので変数名には利用できません。

文字列の中で変数を利用する方法
文字データを格納した変数と文字列は、「+」記号で連結できます。

player="戦士"
print(player+"は、荒野を歩いていた")

関数とは
関数とは、Pythonが持つ特別な機能を呼び出す方法です。
print関数のように標準で利用できる関数と、モジュールを組み込み(インポート)してから利用する関数があります。

関数の例：
print(data)：指定したデータを出力する
str(number)：数値を、数を表す文字に変換する

モジュールを組み込んでから利用する関数は、モジュール名と関数名を「.」(ピリオド)でつないで記述します。

モジュールで組み込む関数の例：
random.random()：0から1までのランダムな数値を出力する
random.randint(a,b)：aからbまでの間のランダムな整数を出力する


引数とは
関数の引数(ひきすう)とは、関数に与えるデータです。
引数は、関数に続くカッコの中に記述します。引数が複数ある場合は、「,」(コンマ)で区切ります。

引数の例：
print(data)のdata：出力するデータをdataで指定する
str(number)のnumber：数から文字に変換するデータをnumberで指定する

戻り値とは
関数の戻り値(もどりち)とは、関数の処理結果のデータです。返り値と呼ぶ場合もあります。

random.randint(0,10)という関数を呼び出すと、0から10までのランダムな数が戻り値となります。

coding:utf-8
数の表示とサイコロ
importrandom
num=random.randint(10,20)
print("スライムが"+str(num)+"でた")

基本的な代数演算子
+足し算6+28
-引き算6-24
*掛け算6*212
/割り算6/23
%余り6%42

計算の優先順位
高い()
｜*/%
低い+-

coding:utf-8
値段を計算する
apple_price	リンゴの単価
apple_num	リンゴを買う数
importrandom
price=random.randint(1,10)*100
num=random.randint(1,10)
print("単価"+str(price))
print("個数"+str(num))
total=price+num
print("合計"+str(total))

